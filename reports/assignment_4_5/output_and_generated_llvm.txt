#-----------------------------------------------------------------
$ ucc sim04.c && ./sim04
compiling sim04.c to sim04

Hello
Good bye

#-----------------------------------------------------------------
$ ucc sim06.c && ./sim06
compiling sim06.c to sim06

9876543210

#-----------------------------------------------------------------
$ ucc sim07.c && ./sim07
compiling sim07.c to sim07

0 XY
1
2 X
3 Y
4 X
5
6 XY
7
8 X
9 Y
10 X
11 W
12 XY
13 W
14 XW
15 Y
16 XW
17 W
18 XY
19 W
20 XW

#-----------------------------------------------------------------
$ ucc sim10.c && ./sim10
compiling sim10.c to sim10

Your name? Tommy
Your age 27
You are: Tommy
You are: 27

#-----------------------------------------------------------------
$ ucc fac.c && ./fac
compiling fac.c to fac

5
120

#-----------------------------------------------------------------
$ ucc fib.c && ./fib
compiling fib.c to fib

0 0
1 1
2 1
3 2
4 3
5 5
6 8
7 13
8 21
9 34
10 55
11 89
12 144

#-----------------------------------------------------------------
$ ucc 8queens.c && ./8queens
compiling 8queens.c to 8queens

04752613

#-----------------------------------------------------------------
$ ucc quick.c && ./quick
compiling quick.c to quick

lctkbsjarizqhypgxofwnevmdu
dcefbgharizqjypsxokwntvmlu
dceabghfrizqjypsxokwntvmlu
dcbaeghfrizqjypsxokwntvmlu
abcdeghfrizqjypsxokwntvmlu
abcdeghfrizqjypsxokwntvmlu
abcdeghfrizqjypsxokwntvmlu
abcdegfhrizqjypsxokwntvmlu
abcdefghrizqjypsxokwntvmlu
abcdefghriuqjlpsmokwntvxyz
abcdefghrinqjlpkmoswutvxyz
abcdefghjinqrlpkmoswutvxyz
abcdefghijnqrlpkmoswutvxyz
abcdefghijklrqpnmoswutvxyz
abcdefghijklrqpnmoswutvxyz
abcdefghijklomnpqrswutvxyz
abcdefghijklmonpqrswutvxyz
abcdefghijklmnopqrswutvxyz
abcdefghijklmnopqrswutvxyz
abcdefghijklmnopqrstuwvxyz
abcdefghijklmnopqrstuwvxyz
abcdefghijklmnopqrstuvwxyz
abcdefghijklmnopqrstuvwxyz
abcdefghijklmnopqrstuvwxyz

#-----------------------------------------------------------------
# LLVM generated from quiet/lexer/l05.c
#-----------------------------------------------------------------
define i32 @main() {
    %i = alloca i32
    %1 = icmp eq i32 3, 0
    %2 = zext i1 %1 to i32
    %3 = icmp ne i32 1, %2
    %4 = zext i1 %3 to i32
    %5 = icmp ne i32 4, 0
    %6 = icmp ne i32 6, 0
    %7 = and i1 %5, %6
    %8 = zext i1 %7 to i32
    %9 = mul i32 7, 8
    %10 = add i32 %9, 10
    %11 = sub i32 11, 12
    %12 = sdiv i32 12, 16
    %13 = add i32 %11, %12
    %14 = icmp sle i32 17, 18
    %15 = zext i1 %14 to i32
    %16 = sub i32 0, 20
    %17 = icmp slt i32 %15, %16
    %18 = zext i1 %17 to i32
    %19 = icmp eq i32 21, 22
    %20 = zext i1 %19 to i32
    store i32 %20, i32* %i
    %21 = icmp sge i32 25, 27
    %22 = zext i1 %21 to i32
    %23 = icmp sgt i32 %22, 28
    %24 = zext i1 %23 to i32
    ret i32 0
}

#-----------------------------------------------------------------
# LLVM generated from quiet/rtl/r01.c
#-----------------------------------------------------------------

@x = global i32 zeroinitializer
@y = global i8 zeroinitializer

define i32 @main() {
    %z = alloca i32
    %w = alloca i8
    store i32 42, i32* @x
    %1 = trunc i32 43 to i8
    store i8 %1, i8* @y
    %2 = sext i8 65 to i32
    store i32 %2, i32* %z
    store i8 10, i8* %w
    ret i32 0
}

#-----------------------------------------------------------------
# LLVM generated from quiet/rtl/r02.c
#-----------------------------------------------------------------
define i32 @f(i32 %x, i32 %y) {
    %1 = alloca i32
    store i32 %x, i32* %1
    %2 = alloca i32
    store i32 %y, i32* %2
    %3 = load i32* %1
    %4 = load i32* %2
    %5 = add i32 %3, %4
    ret i32 %5
}

define i32 @main() {
    %1 = call i32 @f (i32 2, i32 3)
    ret i32 0
}


#-----------------------------------------------------------------
# LLVM generated from quiet/rtl/r03.c
#-----------------------------------------------------------------
@a = global [10 x i32] zeroinitializer

define i32 @main() {
    %b = alloca [10 x i8]
    %1 = getelementptr inbounds [10 x i32]* @a, i32 0, i32 3
    %2 = getelementptr inbounds [10 x i32]* @a, i32 0, i32 5
    %3 = load i32* %2
    %4 = add i32 %3, 7
    store i32 %4, i32* %1
    %5 = getelementptr inbounds [10 x i8]* %b, i32 0, i32 3
    %6 = getelementptr inbounds [10 x i8]* %b, i32 0, i32 5
    %7 = load i8* %6
    %8 = trunc i32 7 to i8
    %9 = add i8 %7, %8
    store i8 %9, i8* %5
    ret i32 0
}

#-----------------------------------------------------------------
# LLVM generated from quiet/rtl/r04.c
#-----------------------------------------------------------------
define void @f(i8* %x) {
    ret void
}

define i32 @main() {
    %a = alloca [7 x i8]
    %1 = getelementptr inbounds [7 x i8]* %a, i32 0, i32 0
    call void @f (i8* %1)
    ret i32 0
}

#-----------------------------------------------------------------
# LLVM generated from quiet/rtl/r05.c
#-----------------------------------------------------------------
define void @f(i32* %x) {
    %1 = getelementptr inbounds i32* %x, i32 3
    %2 = getelementptr inbounds i32* %x, i32 5
    %3 = load i32* %2
    %4 = add i32 %3, 7
    store i32 %4, i32* %1
    ret void
}

@a = global [10 x i32] zeroinitializer

define i32 @main() {
    %1 = getelementptr inbounds [10 x i32]* @a, i32 0, i32 0
    call void @f (i32* %1)
    ret i32 0
}


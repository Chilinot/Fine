#-----------------------------------------------------------------
$ ucc sim04.c && ./sim04
compiling sim04.c to sim04

Hello
Good bye

#-----------------------------------------------------------------
$ ucc sim06.c && ./sim06
compiling sim06.c to sim06

9876543210

#-----------------------------------------------------------------
$ ucc sim07.c && ./sim07
compiling sim07.c to sim07

0 XY
1
2 X
3 Y
4 X
5
6 XY
7
8 X
9 Y
10 X
11 W
12 XY
13 W
14 XW
15 Y
16 XW
17 W
18 XY
19 W
20 XW

#-----------------------------------------------------------------
$ ucc sim10.c && ./sim10
compiling sim10.c to sim10

Your name? Tommy
Your age 27
You are: Tommy
You are: 27

#-----------------------------------------------------------------
$ ucc fac.c && ./fac
compiling fac.c to fac

5
120

#-----------------------------------------------------------------
$ ucc fib.c && ./fib
compiling fib.c to fib

0 0
1 1
2 1
3 2
4 3
5 5
6 8
7 13
8 21
9 34
10 55
11 89
12 144

#-----------------------------------------------------------------
$ ucc 8queens.c && ./8queens
compiling 8queens.c to 8queens

04752613

#-----------------------------------------------------------------
$ ucc quick.c && ./quick
compiling quick.c to quick

lctkbsjarizqhypgxofwnevmdu
dcefbgharizqjypsxokwntvmlu
dceabghfrizqjypsxokwntvmlu
dcbaeghfrizqjypsxokwntvmlu
abcdeghfrizqjypsxokwntvmlu
abcdeghfrizqjypsxokwntvmlu
abcdeghfrizqjypsxokwntvmlu
abcdegfhrizqjypsxokwntvmlu
abcdefghrizqjypsxokwntvmlu
abcdefghriuqjlpsmokwntvxyz
abcdefghrinqjlpkmoswutvxyz
abcdefghjinqrlpkmoswutvxyz
abcdefghijnqrlpkmoswutvxyz
abcdefghijklrqpnmoswutvxyz
abcdefghijklrqpnmoswutvxyz
abcdefghijklomnpqrswutvxyz
abcdefghijklmonpqrswutvxyz
abcdefghijklmnopqrswutvxyz
abcdefghijklmnopqrswutvxyz
abcdefghijklmnopqrstuwvxyz
abcdefghijklmnopqrstuwvxyz
abcdefghijklmnopqrstuvwxyz
abcdefghijklmnopqrstuvwxyz
abcdefghijklmnopqrstuvwxyz

#-----------------------------------------------------------------
# LLVM generated from quiet/rtl/r01.c
#-----------------------------------------------------------------

@x = global i32 zeroinitializer
@y = global i8 zeroinitializer

define i32 @main() {
    %z = alloca i32
    %w = alloca i8
    store i32 42, i32* @x
    %1 = trunc i32 43 to i8
    store i8 %1, i8* @y
    %2 = sext i8 65 to i32
    store i32 %2, i32* %z
    store i8 10, i8* %w
    ret i32 0
}

#-----------------------------------------------------------------
# LLVM generated from quiet/rtl/r02.c
#-----------------------------------------------------------------
define i32 @f(i32 %x, i32 %y) {
    %1 = alloca i32
    store i32 %x, i32* %1
    %2 = alloca i32
    store i32 %y, i32* %2
    %3 = load i32* %1
    %4 = load i32* %2
    %5 = add i32 %3, %4
    ret i32 %5
}
define i32 @main() {
    %1 = call i32 @f (i32 2, i32 3)
    ret i32 0
}

